@use '@scss_mixin' as *;
@use '@scss_variables' as v;
@use 'sass:map';

.container {
  position: relative;
  @include flex-column(flex-start, flex-start, v.$unit * 10);
}

.portfolio_header {
  width: 100%;
  @include flex-column(flex-start, flex-start, v.$spacing-md);

  .portfolio_title {
    @include HL_title_large;
  }

  .portfolio_description {
    max-width: 800px;
    color: v.$txt-gray;
    line-height: 1.6;
    font-size: v.$fz-normal;
  }
}

.filter_section {
  user-select: none;
  position: relative;
  width: 100%;
  display: flex;
  flex-wrap: wrap;
  gap: v.$spacing-sm;

  .filter_button {
    padding: v.$spacing-xs v.$spacing-sm;
    background-color: v.$btn-2-normal;
    border: 1px solid v.$bg-tertiary;
    border-radius: v.$border-radius-sm;
    color: v.$txt-gray;
    font-size: v.$fz-normal;
    text-wrap: nowrap;
    cursor: pointer;
    transition: all 0.3s ease;

    &:hover {
      background-color: v.$btn-2-hover;
    }

    &:active,
    &.active {
      background-color: v.$btn-1-normal;
      color: v.$txt-white;
      border-color: v.$btn-1-normal;
    }
  }
}

.portfolio_items {
  width: 100%;
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(400px, 1fr));
  gap: v.$spacing-lg;
}

@include breakpoint('md', 'lg') {
  .portfolio_items {
    gap: v.$spacing-md;
  }
}

@media screen and (width <= map.get(v.$breakpoints, 'sm')) {
  .portfolio_items {
    grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
  }
}
